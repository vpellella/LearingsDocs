Java9 - 	Modularity, 
			Jshell(REPL), 
			Streams Enhancements, 
			Private methods in Interfaces, 
			HttpClient unofficial release over HttpUrlConnection, 
			trywithresource for delcared variables, 
			Collections static methods(List.of etc)

Java10 - 	var keyword, 
			Parallel GC 

Java11 - 	var keyword enhancements for lamdas, 
			String functions(isblank,lines,strip, repeat), 
			Files read&write strings methods,
			JRE is removed,
			Optional.isblank,
			HttpClient official release
			Collections.toArray(Function) is introduced
			Able to run java file without using compiler in cmd( just run Java <filename.java> in cmd to compile & execute)
			ZGC is introduced
			
Java12 - 	String indent & transform methods
			Files mismatch to find start index of difference in files
			NumberFormatting to show locale based numbering
			Switch expressions improvements
			instanceof with variable to capture data
			
Java13 -	Switch expressions yeild keyword
			Text blocks in """<multi-lines>"""
			String stripIndent, translateEscapes, formatted for text blocks
			Dynamic Class data sharing (CDS) improvement from Java 10 &12
			Enhancements on ZGC 
			
Java14 -	Text blocks \ & \s for developer readabilty
			record type for pojo objects
			switch blocks production relase
			prod release of instanceof with variable
			NullPointer error details improved
			Packing tool to use module with jdk for client release
			Foriegn Memory Access accessing external memory outside of heap using primary Java APIs
			ZGC for Windows & Macos
			JFR for continous monitoring
			Non uniform memory access for G1 GC
			
Java15 -	Still records are in observation phase to release to Prod 
			Sealed classes to restrict inheritance
			Hidden classes available at runtime and not visible for Reflections
			Pattern matching is still in preview phase
			Improvements in Foriegn Memory API which is maily used by 	3rd party libs distributed caches, denormalized document stores, large arbitrary byte buffers, memory-mapped files
			ZGC and Shenandoah are no longer experimental GCs and Shenandoah is not available by all JDK Vendors(Oracle JDK) but the G1 is the default GC
			
Java16 -	Invoke Default Methods From Proxy Instances 
			A new addition to the DateTimeFormatter is the period-of-day symbol “B“, which provides an alternative to the am/pm
			Stream.toList which eliminates Collectors.toList while processing streams
			VectorAPI is to provide a means of vector computations that will ultimately be able to perform more optimally (on supporting CPU architectures) than the traditional scalar method of computations. Example array multiplications etc.,
			Able to use records in the inner classes
			No changes for sealed instanceof with variable
			
Java17 -	The default floating-point operations are strict or
			strictfp, both of which guarantee the same results from the floating-point calculations on every platform.
			Enhanced Pseudo-Random Number Generators - Legacy random classes, such as java.util.Random, SplittableRandom and SecureRandom now extend the new RandomGenerator interface.
			Changes related to Macos
			AppletAPI is depricated
			encapsulating JDK internals since it removes the flag –illegal-access and if the flag is present, the console will issue a message informing the discontinuation of the flag.
			swith expressions cases can be used just like instanceof with variable
			Removed RMI
			Remove the Experimental AOT and JIT Compiler
			Deprecate the Security Manager for Removal
			Foreign Function and Memory API accessing external memory With this feature, we can make a call to a C library from a Java class
			Vector API can be used in scientific algebra linear applications, image processing, character processing, and any heavy arithmetic application or any application that needs to apply an operation for multiple independent operands.
			Context-Specific Deserialization Filters enabled us to validate incoming serialized data from untrusted sources, a common source of many security issues. That validation happens at the JVM level, giving more security and robustness.
			LTS definition, 2 years every LTS 
			
Java18 -	UTF-8 encoding & decoding by Default for all OS
			Simple Web Server jwebserver to serve static files in local
			Code Snippets in Java API Documentation
			Internet-Address Resolution SPI for local testing(running testcases)
			Pattern Matching for switch (same as instanceof variable)
			Throw compile error for Sealed Types in Sealed classes
			Reimplement Core Reflection with Method Handles
			
			
Java19 -	Virtual Threads
			Structured Concurrency 
			Pattern Matching for switch (when keyword)
			Pattern Matching for Records
			New Methods to Create Preallocated HashMaps HashMap.newHashMap(120)
			New System Properties for System.out and System.err for using utf8 encoding
			Foreign Function & Memory API & Vector API
			Deprecation of Locale class constructors (Locale.of)
			java.lang.ThreadGroup is degraded